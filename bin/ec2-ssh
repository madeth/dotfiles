#!/usr/bin/env bash

_usage()
{
  cat <<EOF
Usage:
    $(basename ${0}) [-l SSH_USER] [-i IDENTIFIER_FILE] [-p PROFILE_NAME] [PECO_INPUT_QUERY]

Setting alias:
    $ alias test_server="$(basename ${0}) -l ec2-user -p test_server \$1"

EOF
  exit 1
}

_ec2ssh()
{
  local SSH_USER=$1
  local IDENTITY_FILE=$2
  local PROFILE_NAME=$3
  local QUERY=$4
  local selected_server=$(aws ec2 describe-instances \
    --filters 'Name=instance-state-name,Values=running' \
    --query 'Reservations[].Instances[?PublicDnsName != `null`].[Tags[?Key==`Name`] | [0].Value, PublicDnsName]' \
    --output text \
    --profile $PROFILE_NAME \
    | sort | peco --query "$QUERY" | awk '{print $2}')
  if [ -n "$selected_server" ]; then
    local cmd="ssh -l $SSH_USER -i $IDENTITY_FILE $selected_server"
    echo $cmd
    $cmd
  fi
}

if $(type aws > /dev/null 2>&1) && $(type peco > /dev/null 2>&1); then
  SSH_USER=`whoami`
  IDENTITY_FILE="$HOME/.ssh/id_rsa"
  PROFILE_NAME="default"

  while getopts "l:i:p:h" opt; do
    case $opt in
      l)
        SSH_USER=$OPTARG
        ;;
      i)
        IDENTITY_FILE=$OPTARG
        ;;
      p)
        PROFILE_NAME=$OPTARG
        ;;
      h)
        _usage
        ;;
      \?)
        echo "invalid option: $OPTARG"
        _usage
        ;;
    esac
  done
  shift $((OPTIND-1))
  QUERY=$*

  _ec2ssh $SSH_USER $IDENTITY_FILE $PROFILE_NAME $QUERY
else
  echo 'Required aws-cli and peco.'
  exit 1
fi

exit 0

